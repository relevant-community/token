{
  "address": "0x92dBEa6fa85A1cd839b604D1F2852ABfb7Fa2897",
  "abi": [],
  "transactionHash": "0x468a6bea2335d6627d6b4de48114dac08dc933a3b17788524372737b7b2dd865",
  "receipt": {
    "to": null,
    "from": "0xf09c27934A92c56c7C0dD6cBAc858C35fBd5170f",
    "contractAddress": "0x92dBEa6fa85A1cd839b604D1F2852ABfb7Fa2897",
    "transactionIndex": 0,
    "gasUsed": "238898",
    "logsBloom": "0x
    "blockHash": "0xc82089f6634792cfba3dd76a25301be85d87258fb5c6bce5bc9ca98fed26b7cb",
    "transactionHash": "0x468a6bea2335d6627d6b4de48114dac08dc933a3b17788524372737b7b2dd865",
    "logs": [],
    "blockNumber": 13798112,
    "cumulativeGasUsed": "238898",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ac5afc3f118c5b8c782e5fcef00aa843",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Utils.sol\":\"Utils\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Utils {\\n  using Utils for Unlock;\\n  using Utils for Vest;\\n\\n  struct Vest {\\n    uint256 shortAmnt;\\n    uint256 longAmnt;\\n    uint256 lastUpdate;\\n  }\\n\\n  struct Unlock {\\n    uint256 unlockAmnt;\\n    uint256 unlockTime;\\n  }\\n\\n  // note: we should be able to unlock all tokens (including vested tokens)\\n  function unlock(\\n    Unlock storage self,\\n    uint256 amount,\\n    uint256 lockTime\\n  ) internal {\\n    self.unlockAmnt = amount;\\n    self.unlockTime = block.timestamp + lockTime;\\n  }\\n\\n  function useUnlocked(Unlock storage self, uint256 amount) internal {\\n    require(self.unlockTime <= block.timestamp, \\\"sRelU: tokens are not unlocked yet\\\");\\n    require(self.unlockAmnt >= amount, \\\"sRelU: tokens should be unlocked before transfer\\\");\\n\\n    self.unlockAmnt -= amount; // update locked amount;\\n  }\\n\\n  function resetLock(Unlock storage self) internal {\\n    self.unlockAmnt = 0;\\n    self.unlockTime = 0;\\n  }\\n\\n  function transferUnvestedTokens(Vest storage self, Vest storage vestTo) internal {\\n    require(self.shortAmnt | self.longAmnt != 0, \\\"sRelU: nothing to transfer\\\");\\n\\n    require(\\n      vestTo.shortAmnt | vestTo.longAmnt == 0,\\n      \\\"sRelU: cannot transfer to account with unvested tokens\\\"\\n    );\\n\\n    vestTo.shortAmnt = self.shortAmnt;\\n    vestTo.longAmnt = self.longAmnt;\\n    vestTo.lastUpdate = self.lastUpdate;\\n\\n    // reset initial vest\\n    self.shortAmnt = 0;\\n    self.longAmnt = 0;\\n    self.lastUpdate = 0;\\n  }\\n\\n  function setUnvestedAmount(\\n    Vest storage self,\\n    uint256 shortAmnt,\\n    uint256 longAmnt\\n  ) public {\\n    require(self.shortAmnt + self.longAmnt == 0, \\\"sRelU: account has unvested tokens\\\");\\n    if (shortAmnt > 0) self.shortAmnt = shortAmnt;\\n\\n    if (longAmnt > 0) self.longAmnt = longAmnt;\\n\\n    self.lastUpdate = 0;\\n  }\\n\\n  function unvested(Vest storage self) internal view returns (uint256) {\\n    return self.shortAmnt + self.longAmnt;\\n  }\\n\\n  // this method updates long and short unvested amounts and returns vested amount\\n  function updateUnvestedAmount(\\n    Vest storage self,\\n    uint256 vestShort,\\n    uint256 vestLong,\\n    uint256 vestBegin\\n  ) public returns (uint256 amount) {\\n    if (block.timestamp <= vestBegin) return 0;\\n    uint256 shortAmnt = self.shortAmnt;\\n    uint256 longAmnt = self.longAmnt;\\n    uint256 last = self.lastUpdate < vestBegin ? vestBegin : self.lastUpdate;\\n\\n    if (shortAmnt > 0 && last < vestShort) {\\n      uint256 sAmnt = block.timestamp < vestShort\\n        ? (shortAmnt * (block.timestamp - last)) / (vestShort - last)\\n        : shortAmnt;\\n      self.shortAmnt = shortAmnt - sAmnt;\\n      amount += sAmnt;\\n    }\\n\\n    if (longAmnt > 0 && last < vestLong) {\\n      uint256 lAmnt = block.timestamp < vestLong\\n        ? (longAmnt * (block.timestamp - last)) / (vestLong - last)\\n        : longAmnt;\\n      self.longAmnt = longAmnt - lAmnt;\\n      amount += lAmnt;\\n    }\\n\\n    self.lastUpdate = block.timestamp;\\n    return amount;\\n  }\\n}\\n\",\"keccak256\":\"0x5b317e2ada2b2135586d4f09e8a3248af80f0fecdca4feb39b3d0e97544edad0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61035b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063664b7ed414610045578063f4a216a814610067575b600080fd5b81801561005157600080fd5b50610065610060366004610241565b610099565b005b81801561007357600080fd5b5061008761008236600461026d565b61012a565b60405190815260200160405180910390f35b600183015483546100aa919061029f565b156101065760405162461bcd60e51b815260206004820152602260248201527f7352656c553a206163636f756e742068617320756e76657374656420746f6b656044820152616e7360f01b606482015260840160405180910390fd5b8115610110578183555b801561011e57600183018190555b50506000600290910155565b600081421161013b57506000610239565b845460018601546002870154600090851161015a57876002015461015c565b845b905060008311801561016d57508681105b156101c557600087421061018157836101a9565b61018b82896102f8565b61019583426102f8565b61019f90866102d9565b6101a991906102b7565b90506101b581856102f8565b89556101c1818661029f565b9450505b6000821180156101d457508581105b1561022f5760008642106101e85782610210565b6101f282886102f8565b6101fc83426102f8565b61020690856102d9565b61021091906102b7565b905061021c81846102f8565b60018a015561022b818661029f565b9450505b5050426002870155505b949350505050565b60008060006060848603121561025657600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561028357600080fd5b5050823594602084013594506040840135936060013592509050565b600082198211156102b2576102b261030f565b500190565b6000826102d457634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156102f3576102f361030f565b500290565b60008282101561030a5761030a61030f565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122051a77e744e7dc8bb2ced11b344fa222e310ef4c8336917a6b81fe9b09d18cfd864736f6c63430008060033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063664b7ed414610045578063f4a216a814610067575b600080fd5b81801561005157600080fd5b50610065610060366004610241565b610099565b005b81801561007357600080fd5b5061008761008236600461026d565b61012a565b60405190815260200160405180910390f35b600183015483546100aa919061029f565b156101065760405162461bcd60e51b815260206004820152602260248201527f7352656c553a206163636f756e742068617320756e76657374656420746f6b656044820152616e7360f01b606482015260840160405180910390fd5b8115610110578183555b801561011e57600183018190555b50506000600290910155565b600081421161013b57506000610239565b845460018601546002870154600090851161015a57876002015461015c565b845b905060008311801561016d57508681105b156101c557600087421061018157836101a9565b61018b82896102f8565b61019583426102f8565b61019f90866102d9565b6101a991906102b7565b90506101b581856102f8565b89556101c1818661029f565b9450505b6000821180156101d457508581105b1561022f5760008642106101e85782610210565b6101f282886102f8565b6101fc83426102f8565b61020690856102d9565b61021091906102b7565b905061021c81846102f8565b60018a015561022b818661029f565b9450505b5050426002870155505b949350505050565b60008060006060848603121561025657600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561028357600080fd5b5050823594602084013594506040840135936060013592509050565b600082198211156102b2576102b261030f565b500190565b6000826102d457634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156102f3576102f361030f565b500290565b60008282101561030a5761030a61030f565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122051a77e744e7dc8bb2ced11b344fa222e310ef4c8336917a6b81fe9b09d18cfd864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}