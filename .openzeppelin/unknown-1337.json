{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6E9cA4514744E177E354613F9c0Df0BFBCa407d1"
  },
  "proxies": [],
  "impls": {
    "c52c14602143ff17fdcf618aa344a750ed604643e677cc5e3d824559dea7e956": {
      "address": "0x59bFc294028bb839Ce9A0b9c6b3b89dCaf301645",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "zos-lib/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "zos-lib/contracts/Initializable.sol"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "zos-lib/contracts/Initializable.sol"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_allowed",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20.sol"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin-eth/contracts/ownership/Ownable.sol"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin-eth/contracts/ownership/Ownable.sol"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)101_storage",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "version",
            "type": "t_string_storage",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "devFundAddress",
            "type": "t_address",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "initRoundReward",
            "type": "t_uint256",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "currRoundReward",
            "type": "t_uint256",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "______gap1",
            "type": "t_array(t_uint256)15_storage",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "allocatedRewards",
            "type": "t_uint256",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "allocatedAirdrops",
            "type": "t_uint256",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "nonces",
            "type": "t_mapping(unknown,t_uint256)",
            "src": "contracts/RelevantToken.sol"
          },
          {
            "contract": "RelevantToken",
            "label": "______gap2",
            "type": "t_array(t_uint256)4_storage",
            "src": "openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(unknown,t_uint256)": {
            "label": "mapping(key => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Role)5_storage": {
            "label": "Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(unknown,t_bool)"
              }
            ]
          },
          "t_mapping(unknown,t_bool)": {
            "label": "mapping(key => bool)"
          },
          "t_string": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "579288de4aaaa7c66234f57985377d75028335d9ef4a24e305f3b008bf09c6b9": {
      "address": "0x9f18428d1662d5736d43cf1f9AA29b8C8249C0f0",
      "txHash": "0xae2f52b29301e3b49fb3d946efe312c809df4208f0110b4a67cad3b3b3c29b42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:36"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:233"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "______gap",
            "type": "t_array(t_uint256)101_storage",
            "src": "contracts/RelevantTokenV3.sol:15"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/RelevantTokenV3.sol:17"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/RelevantTokenV3.sol:18"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/RelevantTokenV3.sol:19"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "version",
            "type": "t_string_storage",
            "src": "contracts/RelevantTokenV3.sol:20"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/RelevantTokenV3.sol:21"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "inflation",
            "type": "t_uint256",
            "src": "contracts/RelevantTokenV3.sol:23"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "lastReward",
            "type": "t_uint256",
            "src": "contracts/RelevantTokenV3.sol:24"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "______gap1",
            "type": "t_array(t_uint256)15_storage",
            "src": "contracts/RelevantTokenV3.sol:26"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "allocatedRewards",
            "type": "t_uint256",
            "src": "contracts/RelevantTokenV3.sol:28"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "______gap2",
            "type": "t_uint256",
            "src": "contracts/RelevantTokenV3.sol:30"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/RelevantTokenV3.sol:32"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "______gap3",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts/RelevantTokenV3.sol:34"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "initializedV3",
            "type": "t_bool",
            "src": "contracts/RelevantTokenV3.sol:36"
          },
          {
            "contract": "RelevantTokenV3",
            "label": "DOMAIN_SEPARATOR",
            "type": "t_bytes32",
            "src": "contracts/RelevantTokenV3.sol:44"
          }
        ],
        "types": {
          "t_array(t_uint256)101_storage": {
            "label": "uint256[101]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)15_storage": {
            "label": "uint256[15]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    }
  }
}
